// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

// 命名规范 服务名称_错误  error.code 尽量使用http.code来标识且符合code码含义, 需要备注什么错误，方便定位
func IsDataServiceDataNotFound(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == ErrorReason_DATA_SERVICE_DATA_NOT_FOUND.String() && e.Code == 404
}

// 命名规范 服务名称_错误  error.code 尽量使用http.code来标识且符合code码含义, 需要备注什么错误，方便定位
func ErrorDataServiceDataNotFound(format string, args ...interface{}) *errors.Error {
	md := map[string]string{
		"code": "0",
	}
	return errors.New(404, ErrorReason_DATA_SERVICE_DATA_NOT_FOUND.String(), fmt.Sprintf(format, args...)).WithMetadata(md)
}

func ErrorMsgDataServiceDataNotFound() *errors.Error {
	md := map[string]string{
		"code": "0",
	}
	return errors.New(404, ErrorReason_DATA_SERVICE_DATA_NOT_FOUND.String(), "").WithMetadata(md)
}
